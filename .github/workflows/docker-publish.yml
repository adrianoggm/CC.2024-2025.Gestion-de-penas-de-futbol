name: Build, Test, and Publish Docker Image

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-test:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ghcr.io/adrianoggm/cc.2024-2025.gestion-de-penas-de-futbol
      IMAGE_TAG: ${{ github.sha }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          ${{ env.IMAGE_NAME }}:latest
        labels: |
          org.opencontainers.image.source=https://github.com/adrianoggm/CC.2024-2025.Gestion-de-penas-de-futbol

    - name: Set up Docker Compose
      uses: docker/compose-action@v2
      with:
        version: '2.20.2'

    - name: Start Docker Compose
      run: docker-compose up -d

    - name: Wait for services to be ready
      run: |
        echo "Esperando a que los servicios estÃ©n listos..."
        for i in {1..30}; do
          nc -z localhost 8000 && echo "Servicio disponible" && exit 0
          echo "Esperando 2 segundos..."
          sleep 2
        done
        echo "Los servicios no se iniciaron a tiempo." >&2
        exit 1

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest requests

    - name: Run Tests
      run: pytest tests/test_cluster.py

    - name: Tear down Docker Compose
      if: always()
      run: docker-compose down
