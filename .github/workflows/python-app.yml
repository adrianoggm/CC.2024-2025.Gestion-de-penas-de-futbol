# This workflow will install Python dependencies, run tests, and lint with Python on Linux
name: Python application with PostgreSQL

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  build:

    # Ejecutar en un runner Linux para soportar contenedores
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest psycopg2-binary
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U testuser && break
            echo "PostgreSQL no est√° listo, esperando..."
            sleep 2
          done

      - name: Initialize database schema
        env:
          DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
        run: |
          python -c "
          import os
          import psycopg2
          db_url = os.getenv('DATABASE_URL')
          conn = psycopg2.connect(db_url)
          with open('scripts/schema.sql', 'r') as f:
              schema = f.read()
          with conn.cursor() as cur:
              cur.execute(schema)
          conn.commit()
          conn.close()
          "

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        env:
          DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
        run: pytest
