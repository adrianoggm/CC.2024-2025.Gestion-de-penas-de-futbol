name: Python application with PostgreSQL

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: gestion_penas
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user -d gestion_penas"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        # Montamos la carpeta init_db en /docker-entrypoint-initdb.d (con permisos de lectura y ejecución).
        volumes:
          - ${{ github.workspace }}/init_db:/docker-entrypoint-initdb.d:rw

    steps:
      - uses: actions/checkout@v4

      # Paso para asegurar que el archivo existe y otorgarle permisos de lectura/escritura/ejecución (755).
      - name: Ensure init_db and scripts
        run: |
          if [ ! -f ./init_db/Gestion_Penas.sql ]; then
            echo "ERROR: El archivo Gestion_Penas.sql no existe en ./init_db/"
            exit 1
          fi
          # Otorgar permisos 755 (rwx) a todo el contenido de init_db:
          chmod -R 755 ./init_db
          echo "=== Verificando contenido de la carpeta init_db ==="
          ls -l ./init_db

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest psycopg2-binary
          pip install -r requirements.txt

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U user && break
            echo "PostgreSQL no está listo, esperando..."
            sleep 2
          done

      - name: Verify database schema
        env:
          DATABASE_URL: postgresql://user:password@localhost:5432/gestion_penas
        run: |
          python -c "
          import os
          import psycopg2
          db_url = os.getenv('DATABASE_URL')
          conn = psycopg2.connect(db_url)
          cur = conn.cursor()
          cur.execute('SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = \'public\';')
          tables = cur.fetchall()
          if not tables:
              raise Exception('No se encontraron tablas en la base de datos. Verifica ./init_db/Gestion_Penas.sql.')
          print('Tablas encontradas:', tables)
          cur.close()
          conn.close()
          "

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        env:
          DATABASE_URL: postgresql://user:password@localhost:5432/gestion_penas
        run: pytest
